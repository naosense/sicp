#lang sicp

(define (+ a b)
  (if (= a 0)
      b
      (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0)
      b
      (+ (dec a) (inc b))))

;; 以(+ 2 3)为例，第一种的代换模型如下
;; (+ 2 3)
;; (inc (+ (dec 2) 3))
;; (inc (inc (+ (dec 1) 3)))
;; (inc (inc (+ 0 3)))
;; (inc (inc 3))
;; (inc 4)
;; 5

;; 第二种的模型如下
;; (+ 2 3)
;; (+ 1 4)
;; (+ 0 5)
;; 5
;; 可以看到第一种是递归，第二种是迭代，是什么造成了这一差别
;; 乍看二者类似。一个关键的区别是第二种的操作符在参数上，
;; 也就是在递归过程的内部，每一次的递归相当于修改参数，
;; 第一种呢inc在递归过程的外面，导致运算的时候需要记住inc
;; 的次数，等了解完尾递归再补充